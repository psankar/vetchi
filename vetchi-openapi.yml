---
# Vetchi OpenAPI Specification
# Remember to sort this yaml file alphabetically by keys after making changes
components:
  schemas:
    ClientId:
      description: The client ID, usually a website domain
      example: example.com
      maxLength: 255
      minLength: 3
      type: string
    EmailAddress:
      description: An email address
      example: test@example.com
      format: email
      maxLength: 255
      minLength: 3
      pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
      type: string
    EmployerGetOnboardStatusRequest:
      properties:
        client_id:
          $ref: '#/components/schemas/ClientId'
          description: The client ID
      type: object
    EmployerSignInRequest:
      properties:
        client_id:
          $ref: '#/components/schemas/ClientId'
          description: The client ID
        email:
          $ref: '#/components/schemas/EmailAddress'
          description: The email
        password:
          $ref: '#/components/schemas/Password'
          description: The password
      type: object
    EmployerSignInResponse:
      properties:
        expiresAt:
          format: date-time
          type: string
        token:
          description: The authentication token
          type: string
      type: object
    OnboardStatus:
      description: The onboarding status
      enum:
        - domain_not_verified
        - domain_verified_email_not_sent
        - domain_verified_email_sent
        - domain_onboarded
      type: string
    Password:
      description: A password
      example: Password123$
      format: password
      maxLength: 255
      minLength: 8
      pattern: ^(?:.*[a-z])(?:.*[A-Z])(?:.*\d)(?:.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$
      type: string
    ValidationErrors:
      description: A list of field names for which the validations failed
      items:
        type: string
      type: array
info:
  description: Vetchi APIs that work across multiple clients
  title: Vetchi API
  version: 0.0.1
openapi: 3.0.0
paths:
  /employer/get-onboard-status:
    post:
      description: Get Onboarded Status for a Client
      operationId: employer-get-onboard-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployerGetOnboardStatusRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardStatus'
          description: OK
      summary: Get Onboarded Status for a Client
      tags:
        - Employer
  /employer/signin:
    post:
      description: SignIn to the system
      operationId: employer-signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployerSignInRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerSignInResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
          description: Bad Request
        '401':
          description: Unauthorized
      summary: SignIn
      tags:
        - Employer