---
# Vetchi OpenAPI Specification
# Remember to sort this yaml file alphabetically by keys after making changes
components:
  schemas:
    ClientId:
      description: The client ID, usually a website domain
      example: example.com
      maxLength: 255
      minLength: 3
      type: string
    EmailAddress:
      description: An email address
      example: test@example.com
      format: email
      maxLength: 255
      minLength: 3
      pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
      type: string
    GetOnboardStatusRequest:
      properties:
        client_id:
          $ref: "#/components/schemas/ClientId"
          description: The client ID
      type: object
    EmployerSignInRequest:
      properties:
        client_id:
          $ref: "#/components/schemas/ClientId"
          description: The client ID
        email:
          $ref: "#/components/schemas/EmailAddress"
          description: The email
        password:
          $ref: "#/components/schemas/Password"
          description: The password
      type: object
    EmployerSignInResponse:
      properties:
        expiresAt:
          format: date-time
          type: string
        token:
          description: The authentication token
          type: string
      type: object
    FilteredOpenings:
      description: The filtered openings
      type: array
      items:
        $ref: "#/components/schemas/OpeningInfo"
      example:
        - id: "JAN14-1"
          status: "ACTIVE"
          title: "Software Engineer"
          department_id: "1"
          department_name: "Engineering"
          hiring_manager_email: "hiring_manager@example.com"
          hiring_manager_name: "John Doe"
          recruiter_email: "recruiter@example.com"
          recruiter_name: "Jane Doe"
        - id: "JAN14-2"
          status: "DRAFT"
          title: "Product Manager"
          department_id: "2"
          department_name: "Product"
          hiring_manager_email: "hiring_manager2@example.com"
          hiring_manager_name: "John Smith"
          recruiter_email: "recruiter2@example.com"
          recruiter_name: "Jane Smith"
        - id: "JAN14-3"
          status: "CLOSED"
          title: "Data Scientist"
          department_id: "3"
          department_name: "Data Science"
          hiring_manager_email: "hiring_manager3@example.com"
          hiring_manager_name: "John Johnson"
          recruiter_email: "recruiter3@example.com"
          recruiter_name: "Jane Johnson"
    FilterOpeningsRequest:
      properties:
        hiring_manager_emails:
          description: Any Opening with any of the given HiringManager emails will be returned
          type: array
          items:
            $ref: "#/components/schemas/EmailAddress"
        recruiter_emails:
          description: Any Opening with any of the given Recruiter emails will be returned
          type: array
          items:
            $ref: "#/components/schemas/EmailAddress"
        order_by:
          description: The order by field
          type: array
          items:
            type: string
            enum:
              - created_at
              - department
              - unfilled_count
              - hiring_manager_email
              - recruiter_email
          default:
            [
              "created_at",
              "department",
              "unfilled_count",
              "recruiter_email",
              "hiring_manager_email",
            ]
        order_direction:
          description: The order direction
          type: string
          default: desc
          enum:
            - asc
            - desc
        offset:
          type: string
          maxLength: 255
          minLength: 1
        limit:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
    OpeningStatus:
      description: The status of an opening
      type: string
      enum:
        - DRAFT
        - ACTIVE
        - CLOSED
    OpeningInfo:
      description: Information about an opening
      type: object
      properties:
        id:
          type: string
          description: The opening ID
          example: "JAN14-1"
        status:
          $ref: "#/components/schemas/OpeningStatus"
        title:
          type: string
        department_id:
          type: string
          description: The department ID
        department_name:
          type: string
          description: The department name
        hiring_manager_email:
          type: string
          format: email
          description: The hiring manager email
        hiring_manager_name:
          type: string
          description: The hiring manager name
        recruiter_email:
          type: string
          format: email
          description: The recruiter email
        recruiter_name:
          type: string
          description: The recruiter name
        job_type:
          type: string
        unfilled_count:
          type: integer
        filled_count:
          type: integer
    OnboardStatus:
      description: The onboarding status
      enum:
        - DOMAIN_NOT_VERIFIED
        - DOMAIN_VERIFIED_EMAIL_NOT_SENT
        - DOMAIN_VERIFIED_EMAIL_SENT
        - DOMAIN_ONBOARDED
      type: string
    Password:
      description: A password
      example: Password123$
      format: password
      maxLength: 255
      minLength: 8
      pattern: ^(?:.*[a-z])(?:.*[A-Z])(?:.*\d)(?:.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$
      type: string
    ValidationErrors:
      description: A list of field names for which the validations failed
      items:
        type: string
      type: array
info:
  description: Vetchi APIs that work across multiple clients
  title: Vetchi API
  version: 0.0.1
openapi: 3.0.0
paths:
  /employer/get-onboard-status:
    post:
      description: Get Onboarded Status for an Employer
      operationId: employer-get-onboard-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOnboardStatusRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnboardStatus"
          description: OK
      summary: Get Onboarded Status for a Client
      tags:
        - Employer
  /employer/signin:
    post:
      description: SignIn to the system
      operationId: employer-signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployerSignInRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployerSignInResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrors"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: SignIn
      tags:
        - Employer
  /employer/filter-openings:
    post:
      description: Filter Openings for the signedin employer with the given criteria
      operationId: employer-filter-openings
      summary: Get Openings
      tags:
        - Employer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterOpeningsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilteredOpenings"
