apiVersion: v1
kind: ConfigMap
metadata:
  name: hermione-config
  namespace: vetchidevtest
data:
  config.json: |
    {
      "employer": {
        "tfa_tok_life": "5m",
        "session_tok_life": "15m",
        "lts_tok_life": "730h",
        "employee_invite_tok_life": "5m"
      },
      "hub": {
        "web_url": "https://vetchi.org",
        "tfa_tok_life": "5m",
        "session_tok_life": "15m",
        "lts_tok_life": "730h",
        "hub_user_invite_tok_life": "5m",
        "password_reset_tok_life": "5m"
      },
      "s3": {
        "endpoint": "http://minio:9000",
        "region": "us-east-1",
        "bucket": "resumes",
        "access_key": "minioadmin"
      },
      "port": "8080",
      "timing_attack_delay": "1s"
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: s3-credentials
  namespace: vetchidevtest
type: Opaque
stringData:
  secret_key: minioadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hermione
  namespace: vetchidevtest
spec:
  selector:
    matchLabels:
      app: hermione
  template:
    metadata:
      labels:
        app: hermione
    spec:
      serviceAccountName: hermione-sa
      initContainers:
        - name: wait-for-sqitch
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              until kubectl get job sqitch -n vetchidevtest -o jsonpath='{.status.succeeded}' | grep -q '1'; do
                echo "Waiting for sqitch job to complete..."
                sleep 5
              done
      containers:
        - name: hermione
          image: vetchi/hermione:${GIT_SHA}
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: postgres-app
                  key: uri
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-credentials
                  key: secret_key
          volumeMounts:
            - name: config-volume
              mountPath: /etc/hermione-config
      volumes:
        - name: config-volume
          configMap:
            name: hermione-config
---
apiVersion: v1
kind: Service
metadata:
  name: hermione
  namespace: vetchidevtest
spec:
  selector:
    app: hermione
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hermione-sa
  namespace: vetchidevtest
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hermione-full-access-binding-devtest
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vetchidev-full-access
subjects:
  - kind: ServiceAccount
    name: hermione-sa
    namespace: vetchidevtest
